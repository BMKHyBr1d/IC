close all; clear; clc 

classNames = 0:9;
Teste=load('notMNIST_small.mat')
Treino=load('notMNIST_large.mat')


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Treino%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 Treino.images = reshape(Treino.images, size(Treino.images, 1) * size(Treino.images, 2), size(Treino.images, 3));
% Convert to double and rescale to [0,1]
Treino.images = double(Treino.images) / 255;

  conjuntoDeTreino_x = Treino.images;
conjuntoDeTreino_y_temp = Treino.labels;
conjuntoDeTreino_y=squeeze(onehotencode(conjuntoDeTreino_y_temp,10,'ClassNames',classNames));
% disp(size(conjuntoDeTreino_x));
% disp(size(conjuntoDeTreino_y));
% 
%  figure; colormap(gray)
%  for i=1:25
%      subplot(5,5,i)
%      digit = reshape(Treino.images(:,i),[28 28]);
%      imagesc(digit)
%       disp(Treino.labels(i));
%  end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Teste%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Teste.images = reshape(Teste.images, size(Teste.images, 1) * size(Teste.images, 2), size(Teste.images, 3));
% Convert to double and rescale to [0,1]
Teste.images = double(Teste.images) / 255;

 conjuntoDeTeste_x = Teste.images;
conjuntoDeTeste_y_temp = Teste.labels;
conjuntoDeTeste_y=squeeze(onehotencode(conjuntoDeTeste_y_temp,10,'ClassNames',classNames));
% disp(size(conjuntoDeTeste_x));
% disp(size(conjuntoDeTeste_y));
% 
% 
%  figure; colormap(gray)
%  for i=1:25
%      subplot(5,5,i)
%      digit = reshape(Teste.images(:,i),[28 28]);
%      imagesc(digit)
%       disp(Teste.labels(i));
%  end

%%%%%%%%%%%%%%%%%%%plot%%%%%%%%%%%%%%%%%%%



MT = conjuntoDeTeste_y';
P=conjuntoDeTeste_x;

net = patternnet([10]);
net.divideFcn = 'dividerand';
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 10/100;
net.divideParam.testRatio = 20/100;
net.tra
net = train(net,conjuntoDeTeste_x,conjuntoDeTeste_y');

y = round(net(P));
plotconfusion(y,MT)


[c,cm,ind,per]=confusion(y,MT);

for i=1:10
precision(i) = round(cm(i,i)/sum(cm(:,i)),2);
end
p=mean(precision);

for i=1:10
sensitivity(i) = round(cm(i,i)/sum(cm(i,:)),2);
end
s=mean(sensitivity);

for i=1:10
fmeasure(i) = 2* (precision(i) * sensitivity(i))/(precision(i)+sensitivity(i))
end
fm = 2*(p*s)/(p+s);









% saidaDaRedeParaConjuntoDeTeste = net(conjuntoDeTeste_x);
% conjuntoDeTeste_y_dec = onehotdecode(conjuntoDeTeste_y,classNames,1);
% saidaDaRedeParaConjuntoDeTeste_dec = onehotdecode(saidaDaRedeParaConjuntoDeTeste,classNames,1);
% figure;
% plotconfusion(conjuntoDeTeste_y_dec,saidaDaRedeParaConjuntoDeTeste_dec);





 %%%%Depois%%%%%%%%%%%5
% 
%  hiddenSizes=254;
% trainFcn='trainlm';
%  
%  netMLP=feedforwardnet(hiddenSizes,trainFcn); %Iniciar rede MLP
% netMLP=train(netMLP,trainX,trainY); %treinar a rede MLP
% view(netMLP) %visualizar a rede MLP

 
 %csvwrite('datasetOrange.csv',[I.labels I.images']);


 